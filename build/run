#!/bin/bash



###########################################
# Some variables
###########################################


# directory this script is located
SCRIPTDIR=$(dirname $0)

# In the same directory, the colors script
# exists that defines variables for printing
# out colored messages.
source $SCRIPTDIR/settings






# Path to Flask application
FLASKAPPLICATION="webApp.py"





#
# Printing out some basic settings before starting. Just
# to make sure everything is ok.
#


printf "\n\n${BCyan}[$(date +"%d-%b-%Y %H:%M:%S")] Executing script with the following settings:${NC}\n"

# Default values for some settings
virtualEnvironmentDir=""
execmode="interactive"


# Check if command line arguments were given to the script
while getopts d:a:f:IBW flag
do
    case "${flag}" in
        d) virtualEnvironmentDir=${OPTARG};;
        a) age=${OPTARG};;
        f) fullname=${OPTARG};;
        I) execmode="interactive";;
        B) execmode="batch";;
        W) execmode="web";;
    esac
done

# Check if path given in command line argument
if [ -z "$virtualEnvironmentDir" ]; then 
   # No argument for virtual environment given. Continue with default
   virtualEnvironmentDir="$defaultVirtualEnvironmentDir"
fi

printf "\n"


###########################################
# Actual checks start from here
###########################################

if [ ! -z "$virtualEnvironmentDir" ] 
then

  # Create absolute path   
  if [[ $(echo ${OSPLATFORM} | tr '[:lower:]' '[:upper:]') =~ .*(LINUX|OSX|DARWIN|BSD).* ]]; then
    
    # =~ ^//*
    if [[ ! "${virtualEnvironmentDir:0:1}" == / ]];
    then
       virtualEnvironmentDir="${EXECUTIONDIR}/${virtualEnvironmentDir}"
    fi

  elif [[ $(echo ${OSPLATFORM} | tr '[:lower:]' '[:upper:]') =~ .*(WINDOWS|WIN32|MSYS).* ]]; then
    if [[ ! "$virtualEnvironmentDir" == [A-Za-z]:*  ]]; then
       virtualEnvironmentDir="${EXECUTIONDIR}/${virtualEnvironmentDir}"
    fi
    
  fi
  
  if [ ! -d $virtualEnvironmentDir ]; then
        printf "${RED}Error: Virtual environment directory $virtualEnvironmentDir not found.${NC}\n"
        exit -8
  fi
   
  
   printf "${BICyan}[A]${NC} Activating virtual environment at ${virtualEnvironmentDir}....."
   
   #Activate environment. Make sure that this environment exists
   . ${virtualEnvironmentDir}/bin/activate
   printf "${White}OK.${NC}\n"     
   
fi


# Start the relevant execution based on the specified
# mode (interactive, batch or web)
# NOTE: the way webScraper must be executed depends on the OS.

printf "Starting ${execmode} mode.\n"

if [ ${execmode} == "interactive" ]; then
    
    if [[ $(echo ${OSPLATFORM} | tr '[:lower:]' '[:upper:]') =~ .*(LINUX|OSX|DARWIN|BSD).* ]]; then
       python3 webScraper.py
    elif [[ $(echo ${OSPLATFORM} | tr '[:lower:]' '[:upper:]') =~ .*(WINDOWS|WIN32|MSYS).* ]]; then
       python webScraper.py
    else
       printf "${IBYellow}Unknown OS. Trying python\n"
       python webScraper.py
    fi
fi


if [ ${execmode} == "batch" ]; then
    
    if [[ $(echo ${OSPLATFORM} | tr '[:lower:]' '[:upper:]') =~ .*(LINUX|OSX|DARWIN|BSD).* ]]; then
       python3 webScraper.py -B
    elif [[ $(echo ${OSPLATFORM} | tr '[:lower:]' '[:upper:]') =~ .*(WINDOWS|WIN32|MSYS).* ]]; then
       python webScraper.py -B
    else
       printf "${IBYellow}Unknown OS. Trying python\n"
       python webScraper.py -B
    fi
fi


if [ ${execmode} == "web" ]; then
    flask --app webApp.py run    
fi

