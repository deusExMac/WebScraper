
########################################################################################################################################################
#
# Example library 2: Demonstrating the application of two rules on a single page: one extracting the title and one extracting hyperlinks of the page. 
#                    Inside libraries a rule with the name getLinks always extracts hyperlinks. The name getLinks is a reserved word in the context of
#                    WebScraper. Extracted hyperlinks are followed and pages they point to are processed by the same library (i.e. extracting their title). 
#                    
# 
# This library scraps/extracts the title of all english wikipedia articles that will be encounterred as well as all hyperlinks that
# that lead to wikipedia. Links not pointing to wikipedia are ignored. All extracted wikipedia links will be followed and processed in the
# same way.
# It contains a special rule named "getLinks" which is a keyword and only rules harvesting links should be named like that.
# 
# How to apply this rule:
#
# v0.05a){1}WebScraper >> crawl  -r rules/example2-en.wikipedia.exr -o csv/example2.csv https://en.wikipedia.org/wiki/Python_(programming_language)
#
# This will extract the title of all the wikipedia pages downloaded and store it in the csv file named example2.csv . English wikipedia
# hyperlinks are followed and from the visited pages the title is extracted. 
# 
# v0.1@5/8/2022
#
########################################################################################################################################################


{

# Description of the library

"libraryDescription": "Library to extract the title and hyperlinks from wikipedia articles",



# List of rule names, whose results should be stored in the csv file. Here only articleTitle is
# mentioned meaning that only the result of the rule named articleTitle should be stored in the csv file.
# IMPORTANT: date the url was accessed (dateaccessed) and the url are always automatically added to the csv file

"csvLineFormat":["articleTitle"],



# How should the downloaded html page be rendered.
# WebScraper supports two modes of URL downloads:
# static: meaning that the web page does not load its content dynamically (via js or ajax) and one http request is enough to get
#         the entire page content. 
# dynamic: meaning the athe web page has dynamic content that is loaded via js or ajax once the web page has
#          been downloaded or is scrolled. Example of such dynamic pages are e.g. youtube pages where comments are only displayed
#          when the user scrolls down. Scraping such dynamic pages is also supported by WebScraper. Dynamic pages load slower though.
# 
# If renderPages has a value of False, this means the no page rendering is carried out and should be used only in case of pages that
# do not load content dynamicaly.
# If renderPages has a value of True, this means the page rendering is done and should be used only in case of pages that load content
# dynamically. 
# 
# Since we access wikipedia articles with no dynamic content, we will statically load these pages. Hence renderPages is set to False. This
# will make page loading faster. If renderPages is missing, it defaults to False.

"renderPages":False,



# List of individual rules comprising this library and that will be applied to each page downloaded follows. 
# This library consists of one rule only, named articleTitle. The value extracted by this rule
# will be assigned to a special key/variable with the same name as the rule i.e. articleTitle.
# These keys/variables can be references inside thi rule file e.g. see csvLineFormat field above.

"library": [


# Rule to extract/scrape the title of the downloaded article

{
 "ruleName": "articleTitle",
 "ruleDescription": "Extracts the title of a wikipedia article",
 
 # Regular expression specifying which URL pattern will trigger the
 # execution of this rule. 
 # This is a list ([]) meaning you may add many disjunctive regular expressions
 # Here we specify that this rule is to be activated when the URL contains en.wikipedia.org/wiki.
 # Special regular expression metacharacters (.) are escaped.
 "ruleURLActivationCondition": ["en\.wikipedia\.org/wiki"],
 
 # A CSS selector specifying the element on the page to scrape.
 # NOTE: the CSS selector may return more than one mathing element.
 "ruleCSSSelector": "#firstHeading",
 
 # Once the CSS selector element in  ruleCSSSelector has been found, what 
 # exactly to extract from element: the text or some other attribute. 
 # text means simply return the text of the scraped element.
 "ruleTargetAttribute": "text",
 
 # Regular expression that specifies the condition the extracted text or attribute value has to
 # fulfill. Empty string here means no condition. If condition is not met, nothing is returned.
 "ruleContentCondition": "",
 
 # Does this rule return more than one result?
 "ruleReturnsMore": False,
 
 # If the rule returns more than one result, which result to return. Negative means all elements. 
 # This takes only effect if ruleReturnsMore is set to True.
 "ruleReturnedMatchPos": 0,
 
 # NOT YET SUPPORTED. How strict should the extraction be? If rule returns more than one result, should this be considered
 # an error?
 "ruleReturningMoreIsError": False,
 
 # List of characters to remove from the extracted value (text or attribute)
 "ruleRemoveChars": [],
},




# Second rule: extracting links from the page
# A the name getLinks is a keyword signifying a rule that extracts
# hyperlinks found on the page what match the specified conditions.
#
# When you would like to extract and follow hyperlinks found on a webpage,
# you must name the respective rule extracting these hyperlins getLinks. 
# This is because the extracted links are handled differently from other 
# extracted data (e.g. they must be added to the queue).
#
#

{

 # Name of rule. Remember getLinks is a reserved word implying
 # a very specific behavior.
 "ruleName": "getLinks",
 
 "ruleDescription": "Extracting hyperlinks from the downloaded webpage",
 
 # Regular expression specifying for which URLs/pages to activate this rule.
 "ruleURLActivationCondition": ["en\.wikipedia\.org.*$"],
 
 # CSS selector containing the information (hyperlink) to extract
 "ruleCSSSelector": "a[href]",
 
 # From the specified selector, we are interested only in the value of the
 # attribute href, which contains the hyperlink.
 # NOTICE: WebScraper takes care of relative links
 "ruleTargetAttribute": "href",
 
 # Once we got the value of the target attribute, this regular expression
 # specifies a condition that the value has to meet. Here, we are interested 
 # only in hyperlinks that point to english wikipedia pages. I.e. pages outside
 # of the english wikipedia site will not be extracted and hence won't be followed.
 "ruleContentCondition": "en\.wikipedia\.org/.*$",
 
 # This signifies that this rule will not return only one chunk of information, but
 # a list of chunkc since a web page may have many <a href= > tags.
 "ruleReturnsMore": True,
 
 # -1 means return all matched
 "ruleReturnedMatchPos": -1,
 
 "ruleReturningMoreIsError": False 
}

]


}