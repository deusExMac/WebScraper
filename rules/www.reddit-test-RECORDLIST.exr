#
# json format of 
# 
# version 0.01@18/05/2022
#
#


{
"libraryDescription": "Library to crawl greek reddit",
"csvLineFormat": ["postAuthor", "postTitle", "upvoteCount"],
"renderPages": True,

"ruleDynamicElements": [ 

         # First operation/interaction to apply on the downloaded page. 
         {
             # On which URLs to apply this operation. URLs matching this
             # regular expression will be the target of this operation. If not matched,
             # interaction is not applied.
		     "dpcURLActivationCondition": "www\.reddit\.com/r/greece/?$",
		     
		     # Type of operation to apply. Valid values are: scrollpage, scroll, click, fill
		     # scrollpage scrolls the entire page
		     # scroll scrolls an html element
		     # click, clicks on a button of html element (includes submits)
		     "dpcType":"scrollpage",
		     
		     # CSS selector specifying on which element to apply the interaction/operation. E.g.
		     # when dpcType is fill, then this should specify the input element to fill, if dpcType
		     # has a value of click, this field specifies the button/element to click on.
		     "dpcPageElement":"",
		     
		     # If dpcType is scrollpage or scroll, dpcScrolldown specifies how many times 
		     # to scroll down. This is one way of controlling scrolling of a page. Number
                     # of time is independent of the page's state beeing scrolled.
		     # Negative values or zero means no scrolling at all. 
		     "dpcScrolldown":15,
		     
		     # dpcScrollTargetElementCount is another way of controlling scrolling.
		     # It encodes a condition to stop PAGE scrolling
		     # in terms of  the number of desired html elements that should appear.
		     # dpcScrollTargetElementCount must have two fields named scrollTargetSelector and scrollTargetCount
		     #
		     # scrollTargetSelector: CSS Selector of the items to count
		     # scrollTargetCount: how many elements specified by  scrollTargetSelector should
		     # be on the page before stop scrolling. If this amount is reached, scrolling is stopped.
		     # if scrollTargetCount is negative, infinite scrolling is initiated: this means scrolling will continue
		     # while new elements are loaded. Value of 0 means no scrolling at all.
		     #
		     # For example, using this field you may specify scroll conditions like: continue
		     # scrolling of page until X number of comments will appear.
		     #
		     # dpcScrollTargetElementCount and dpcScrolldown are mutually exclusive when operation
		     # is scrollpage or scroll. dpcScrollTargetElementCount is always given priority if both are
		     # specified. 
             # Here, dpcScrollTargetElementCount is commented out which defaults in 
             # an empty dpcScrollTargetElementCount dictionary which means that the dpcScrolldown
             # option will be used. Currently this is the only way to use dpcScrolldown.
		     #
		     #
		     # IMPORTANT: dpcScrollTargetElementCount is a json object that must contain the 
		     # fields scrollTargetSelector and scrollTargetCount, i.e. these are mandantory.
		     # scrollTargetCount is an integet, but here MUST be encoded as a string
		     # 
		     #"dpcScrollTargetElementCount" : { "scrollTargetSelector": "#author-text .ytd-comment-renderer", "scrollTargetCount":"-1" },
		     
		     
		     # CSS element  specifying which html element to wait to appear on the page, before continuing applying 
		     # interactions/operations. If dpcWaitFor is non empty, execution is blocked. If left blank, no waiting is conducted and
		     # execution is not blocked.  
		     "dpcWaitFor":"",
		     
		     # String to fill html input elements. 
		     # Used only when dpcType is set to 'fill'
		     "dpcFillContent": ""		     
		 }
		 
		 # Other interactions/operations cab be added here. If more than one interaction is present,
		 # these are executed in the order they are defined. All interactions are applied on a single page
		 # if activation condition is met.
],


"library": [

{
 "ruleName": "postEntry"
 "ruleDescription": "Get authors and titles of Europes subreddit page"
 "ruleURLActivationCondition": ["www\.reddit\.com/r/greece/?$"]
 "rulePreconditionType": "Any"
 "rulePreconditions" : []                                                  
 "ruleCSSSelector": "._11R7M_VOgKO1RJyRSRErT3"
 "ruleTargetAttribute": "text"
 "ruleContentCondition": ""
 "rulePostCSSSelector": [".oQctV4n0yUb0uiHDdGnmE", "._eYtD2XCVieq6emjKBH3m", "._1E9mcoVn4MYnuBQSVDt1gC"]
 "ruleReturnedValueNames": ["postAuthor", "postTitle", "upvoteCount"]
 "ruleReturnsMore": True
 "ruleReturnedMatchPos": -1
 "ruleReturningMoreIsError": False
  
},



{
 "ruleName": "getLinks"
 "ruleDescription": "Extracting links rule"
 "ruleURLActivationCondition": ["www\.reddit\.com/r/greece"]
 "ruleCSSSelector": "a[href]"
 "ruleTargetAttribute": "href"
 "ruleContentCondition": ""
 "ruleReturnsMore": True
 "ruleReturnedMatchPos": -1
 "ruleReturningMoreIsError": False
 
 
}

]


}