
########################################################################################################################################################
#
# Example library 5.1: Demonstrating the use of more than one page preconditions in one rule, before applying the rule's css selectors (scraping data) and 
#                      how these preconditions are evaluated. This example demonstrates evaluation using the ALL operator between
#                      preconditions i.e. rule is only applied if ALL of the specified page rule preconditions are evaluated as TRUE. 
# 
# Related fields: rulePreconditionType (ALL), rulePreconditions
#
# This library scraps/extracts the name of scientists from wikipedia articles, that meet the all the next requirements:
#  1) are physicists, 2) are born in either january or march or may or october and 3)  have an american nationality. 
#
# For example the preconditions should return True for page
#
# https://en.wikipedia.org/wiki/Jules_Aarons
#
# and extract the article's title, which is the physicists name 
# 
# but should return False for page
#
# https://en.wikipedia.org/wiki/Andr%C3%A9-Marie_Amp%C3%A8re
#
# because, while a physicist and born in january, the physicist's nationality is french.
#
#
# This library demonstrates the use of the rulePreconditionType ALL in preconditions.
#
# 
# How to apply this rule:
#
#    crawl -M -n -1 -r rules/example4.2-en.wikipedia.exr -o csv/example4.2.csv https://en.wikipedia.org/wiki/List_of_physicists
#
# https://en.wikipedia.org/wiki/List_of_physicists is a list of physicist to make application of the library more apparent and easier to check since
# the library is considered to be applied on wikipedia pages related to physicists.
#
# 
# v0.1@01/9/2022
#
########################################################################################################################################################



{

# Description of the library

"libraryDescription": "Library to extract the title of english wikipedia articles related to statistics OR algebra.",



# List of rule names, whose extracted data should be stored in the csv file. 
# IMPORTANT: date the url was accessed (dateaccessed) and the url are always automatically added to the csv file

"csvLineFormat":["articleTitle"],


# The list of ruleNames that must return non-empty values
# to consider the extraction successful and the data be written to the csv file. 
# If at least one  of the ruleName(s) receive an empty value, the extracted
# data is not added to the csv file. 
# An empty list here means no keys must be non-empty i.e. filled.

"requiredFilledFields": ["articleTitle"],


# Minimum percentage of ruleName that must return non-empty
# data during their application in order to consider the extraction process
# a success and hence add the extracted data to the csv file.
# Allowed values: floats in range [0, 1]. A negative value means no minimum percentage.

"allowedMinimumFilled" : -1.0

# How should the downloaded html page be rendered.
# WebScraper supports two modes of URL downloads:
# static: meaning that the web page does not load its content dynamically (via js or ajax) and one http request is enough to get
#         the entire page content. 
# dynamic: meaning the athe web page has dynamic content that is loaded via js or ajax once the web page has
#          been downloaded or is scrolled. Example of such dynamic pages are e.g. youtube pages where comments are only displayed
#          when the user scrolls down. Scraping such dynamic pages is also supported by WebScraper. Dynamic pages load slower though.
# 
# If renderPages has a value of False, this means the no page rendering is carried out and should be used only in case of pages that
# do not load content dynamicaly.
# If renderPages has a value of True, this means the page rendering is done and should be used only in case of pages that load content
# dynamically. 
# 
# Since we access wikipedia articles with no dynamic content, we will statically load these pages. Hence renderPages is set to False. This
# will make page loading faster. If renderPages is missing, it defaults to False.

"renderPages":False,



# List of individual rules comprising this library and that will be applied to each page downloaded follows. 
# This library consists of two rules, named articleTitle and getLinks. 

"library": [


# Rule to extract/scrape the title of the downloaded article. The title
# is assumed to be the teams name, not it's full name (or formal name)

{

 # If no ruleName is specified, the extracted data of this rule cannot be used
 # in  the csvLineFormat attribute.
 
 "ruleName": "articleTitle",
 
 
 # Short description
 
 "ruleDescription": "Extracts the article's title of wikipedia pages that 1) are on physicists 2) were born may, january, march or october and 3) have american (US) nationality.",
 
 
 
 # Regular expression specifying which URL pattern will trigger the
 # execution of this rule. 
 # This is a list ([]) meaning you may add many disjunctive regular expressions
 # Here we specify that this rule is to be activated when the URL contains en.wikipedia.org/wiki.
 # Special regular expression metacharacters (.) are escaped.
 
 "ruleURLActivationCondition": ["en\.wikipedia\.org/wiki"],
 
 
 # rulePreconditionType specifies how to evaluate preconditions, if more than one is
 # present. Value ALL means that all of the preconditions must return TRUE, in order
 # to apply the rule. You may consider value AND in rulePreconditionType as evaluating the logical expression:
 #
 #  PRECONDITION1 AND PRECONDITION2 AND PRECONITION3 ...
 #
 #  If the above expression returns True for the currently processed page, the rule is applied on the page.
 #
 #  Other values for rulePreconditionType supported are: ANY, EVAL which result in different
 #  evaluation of preconditions. Seel documentation and/or other examples for a demonstration of these values.
 
 "rulePreconditionType": "ALL",
 
 
 
 # Page rule preconditions, i.e. preconditions that must hold for the PAGE currently processed   
 # in order to apply the selector in ruleCSSSelector. 
 # This rule contains three page preconditions that all must be true in order
 # to apply the selector (see ALL value in rulePreconditionType)
 
 
 "rulePreconditions" : [ 
 
                          # First precondition: Check that the page is about a physicist. This
                          # is determined by checking the page categories found in the bottom 
                          # of the page
                          {
                             # The precondition selector i.e. the element to be
                             # checked. This precondition checks if the pages is
                             # about a physicist.
                        
                             "ecCSSSelector" : "#mw-normal-catlinks", 
                            
                            
                            # Regular expression the text property of the element 
                            # in ecCSSSelector must match. Only text property is currently 
                            # supported. If element matches regular expression, the 
                            # precondition holds and the ruleCSSSelector is applied.
                            #
                            # An empty value (the default if ecTextCondition is missing) 
                            # means that this precondition holds if the element 
                            # specified in ecCSSSelector exists on the page currently processed.
                            # 
                            # REMEMBER: If you would like to specify a case INsensitive match,
                            # you may add the (?i) flag                              
                            
                            "ecTextCondition" : "(?i)\bphysicists\b"
                          },
                          
                          # Second precondition: Check if page mentions that physicist is born
                          # in either january or march or may or october. 
                          # This is determined by checking a specific field/row in the infobox.                           
                          # The disjunctive condition is "encoded" in the regular expression. 
                          {
                             # The precondition selector i.e. the element to be
                             # checked. This precondition checks if the pages is
                             # about Statistics
                        
                             "ecCSSSelector" : "tr:nth-child(3) .infobox-data", 
                            
                            
                            # Regular expression the text property of the element 
                            # in ecCSSSelector must match. Only text property is currently 
                            # supported. If element matches regular expression, the 
                            # precondition holds and the ruleCSSSelector is applied.
                            #
                            # An empty value (the default if ecTextCondition is missing) 
                            # means that this precondition holds if the element 
                            # specified in ecCSSSelector exists on the page currently processed.
                            # 
                            # REMEMBER: If you would like to specify a case INsensitive match,
                            # you may add the (?i) flag                              
                            
                            "ecTextCondition" : "(?i)\b(may|january|march|october)\b"
                          },
                          
                          
                          # Third precondition: Check if page mentions that physicist has america (us)
                          # nationality.
                          # This is determined by checking if a specific field/row in the infobox 
                          # contains united states or american.                          
                        
                          {
                             # The precondition selector i.e. the element to be
                             # checked. This precondition checks if the page being processed 
                             # is about Algebra
                        
                             "ecCSSSelector" : "tr:nth-child(5) .infobox-data", 
                            
                            
                            # Regular expression the text property of the element 
                            # in ecCSSSelector must match. Only text property is currently 
                            # supported. If element matches regular expression, the 
                            # precondition holds and based on the  rulePreconditionType the
                            # preconditions are evaluated. If these return TRUE the 
                            # ruleCSSSelector is applied on the page currently being processed.
                            #
                            # NOTE: case insensitive match specified
                                                        
                            "ecTextCondition" : "(?i)\b(united states|american)\b"
                          }
 ],
 
 
 
 # A CSS selector specifying the element on the page to scrape. For pages
 # matching the preconditions, the title will have the physicists name.
 
 
 "ruleCSSSelector": "#firstHeading",
 
 
 # Once the CSS selector element in  ruleCSSSelector has been found, what 
 # exactly to extract from element: the text or some other attribute. 
 # text means simply return the text of the scraped element.
 "ruleTargetAttribute": "text",
 
 # Regular expression that specifies the condition the extracted text or attribute value has to
 # fulfill. Empty string here means no condition. If condition is not met, nothing is returned.
 "ruleContentCondition": "",
 
 # Does this rule return more than one result?
 "ruleReturnsMore": False,
 
 # If the rule returns more than one result, which result to return. Negative means all elements. 
 # This takes only effect if ruleReturnsMore is set to True.
 "ruleReturnedMatchPos": 0,
 
 # NOT YET SUPPORTED. How strict should the extraction be? If rule returns more than one result, should this be considered
 # an error?
 "ruleReturningMoreIsError": False,
 
 # List of characters to remove from the extracted value (text or attribute)
 "ruleRemoveChars": [],
},


#],
                          
 

# Rule for extracting links from the page
# A the name getLinks is a keyword signifying a rule that extracts
# hyperlinks found on the page what match the specified conditions.
#
# When you would like to extract and follow hyperlinks found on a webpage,
# you must name the respective rule extracting these hyperlins getLinks. 
# This is because the extracted links are handled differently from other 
# extracted data (e.g. they must be added to the queue).


{

 # Name of rule. Remember getLinks is a reserved word implying
 # a very specific behavior.
 "ruleName": "getLinks",
 
 "ruleDescription": "Extracting hyperlinks from the downloaded webpage",
 
 # Regular expression specifying for which URLs/pages to activate this rule.
 "ruleURLActivationCondition": ["en\.wikipedia\.org.*$"],
 
 # CSS selector containing the information (hyperlink) to extract
 "ruleCSSSelector": "a[href]",
 
 # From the specified selector, we are interested only in the value of the
 # attribute href, which contains the hyperlink.
 # NOTICE: WebScraper takes care of relative links
 "ruleTargetAttribute": "href",
 
 # Once we got the value of the target attribute, this regular expression
 # specifies a condition that the value has to meet. Here, we are interested 
 # only in hyperlinks that point to english wikipedia pages. I.e. pages outside
 # of the english wikipedia site will not be extracted and hence won't be followed.
 "ruleContentCondition": "en\.wikipedia\.org/.*$",
 
 # This signifies that this rule will not return only one chunk of information, but
 # a list of chunkc since a web page may have many <a href= > tags.
 "ruleReturnsMore": True,
 
 # -1 means return all matched
 "ruleReturnedMatchPos": -1,
 
 "ruleReturningMoreIsError": False 
}

]


}