########################################################################################################################################################
#
# Example library 10.5: Demonstrating the use of an external Chrome installation in headless mode, instead of default engine Chromium supported by pyppeteer, 
#                       for loading and interacting with webpages. 
#                       
# 
# Related fields: launchParameters {executablePath, userDataDir}, renderPages, ruleDynamicElements, dpcType (click, scroll), dpcPageElement, dpcScrolldown, dpcWaitFor.
#
# This example extracts the names of users that have commented on airbnb listings. It scrolls the comment page/window down 8 times before extracting usernames and comments. 
#
# version 0.01@18/05/2022
#
#
########################################################################################################################################################

{
"libraryDescription": "Library to that crawls airbnb site and downloads usernames and comments from airbnb listings. Uses an extrenal Chrome installation in headless mode for rendering and interacting with the web page.",

# These extracted field names will be stored in
# the csv file
"csvLineFormat":["username", "comment"],



"renderPages": True,


# How to launch the rendering browser: the build in chromium browser that pyppeteer uses or an existing Chrome installation/executable on the local computer.
# Here, the launchParameter field is configured to use an external
# Chrome installation in headless mode to download pages.
# 
# An external Chrome installation is used in cases where the build in
# Chromium browser cannot properly load a page which maybe sometimes the case.
#  
# NOTE: this field is taken into consideration only if renderPages is se to True.



# Launch parameters for Windows platforms
# Adjust path based on your Chrome installation.

"launchParameters" : { "executablePath":"F:\\ProgramFiles\\Programs\\Google\\Chrome\\Application\\chrome.exe", "userDataDir" : "C:\\Users\\Manolis\\AppData\\Local\\Google\\Chrome\\User Data" },


# Launch parameters for MacOS platoforms.
# Adjust path based on your Chrome installation.

#"launchParameters" : { "executablePath":"/Applications/Google Chrome.app/Contents/MacOS/Google Chrome", "userDataDir" : "" },





# Launch parameters for Windows
# Windows launch parameters require also the userDataDir.
# Adjust values based on your installation.

#"launchParameters" : { "executablePath":"F:\\ProgramFiles\\Programs\\Google\\Chrome\\Application\\chrome.exe", "userDataDir" : "C:\\Users\\Manolis\\AppData\\Local\\Google\\Chrome\\User Data" },


"ruleDynamicElements": [ 
            
		 
		 # Close by clicking on the X of the "translation on" screen that pops
		 # up when accessing as a guest airbnb listings so that it closes. Whait for the button
		 # showing the comments to appear.
		 {
		 		     "dpcType":"click",
		 		     "dpcPageElement":"div._1piuevz",
		 		     "dpcScrolldown":0,
		 		     "dpcWaitFor":"button._11eqlma4"
		 },
		 
		 # Click on the XXX reviews link/button that'll pop up a screen showing the comments. 
		 # Wait for the pop up to appear (after clicking on the button) 
		 {
		     "dpcType":"click",
		     "dpcPageElement":"button._11eqlma4",
		     "dpcScrolldown":0,
		     "dpcWaitFor":"div._17itzz4"
		 },

         # Scroll the windows popup with the comments 8 times so that a 
         # number of comments appear.
		 {
		     "dpcType":"scroll",
		     "dpcPageElement":"div._17itzz4",		     
		     "dpcScrolldown":8,
		     "dpcWaitFor":""
		 }
 
],

"requestUserAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:106.0) Gecko/20100101 Firefox/106.0",




"library": [

# Rule to get comments from airbnb listing.
# Retutns a recordlist of extracted username and comments dictionaries.
{
 "ruleName": "getUserAndComments"
 "ruleDescription": "Extracting the comments from a listing"
 "ruleURLActivationCondition": ["www\.airbnb\.com/rooms.*"]
 "rulePreconditionType": "Any"
 "rulePreconditions" : []
 
 "ruleCSSSelector": "div.r1are2x1"
 "ruleTargetAttribute": "text",
 "ruleContentCondition": "",
 
 # These selectors will be applied to all elements 
 # returned by ruleCSSSelector
 # It is assumed that these selectors return ONLY one
 # matchine element. Currently only the text of these elements is
 # extracted.
 "rulePostCSSSelector" : ["h3._14i3z6h", "span.ll4r2nl"],
 
 # One-to-one correspondence with rulePostCSSSelector 
 # selector list. E.g. here, data extracted by h3._14i3z6h
 # will be named usename. 
 "ruleReturnedValueNames" : ["username", "comment"],

 # This refers to the result of ruleCSSSelector
 "ruleReturnsMore": True,
 
 "ruleReturnedMatchPos": -1,
 "ruleReturningMoreIsError": False
 
}, # getUserAndComments




# Rule to get links pointing to airbnb listings from the airbnb main page
{
 "ruleName": "getLinks",
 "ruleDescription": "Extracting the links to airbnb listings",
 
 # We have 2 patterns here because the main page seem to redirect
 "ruleURLActivationCondition": ["www\.airbnb\.com\/?$", "_set_bev_on_new_domain"],
 "rulePreconditionType": "Any",
 "rulePreconditions" : [],
 
 "ruleCSSSelector": "a[href]",
 "ruleTargetAttribute": "href",
 
 # Extract/keep only links to listings. This url will activate the getUserAndComments above.
 "ruleContentCondition": "www\.airbnb\.com/rooms.*",
 
 

 # This refers to the result of ruleCSSSelector
 "ruleReturnsMore": True,
 
 "ruleReturnedMatchPos": -1,
 "ruleReturningMoreIsError": False
 
} # getLinks



] # library


}